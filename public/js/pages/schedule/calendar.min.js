$(document).ready(function () {

  $('#dateFrom').datepicker({
    autoclose: true,
    format: 'yyyy-mm-dd'
  })

  $('#dateTo').datepicker({
    autoclose: true,
    format: 'yyyy-mm-dd'
  })

  //Timepicker
  $('.timepicker').timepicker({
    showInputs: false,
    showMeridian : false,
  })

  $(document).on('submit', 'form#addScheduleForm', function(event){
    event.preventDefault();
    var form = $(this);
    var data = new FormData($(this)[0]);
    var url = form.attr("action");
    $.ajax({
      type : form.attr('method'),
      url : url,
      data : data,
      cache : false,
      contentType : false,
      processData : false,
      success : function (data) {
        if (data.status == "failed validation") {
          
          jQuery.each(data.message, function(key, value){
            jQuery('.alert-danger').show();
            jQuery('.alert-danger').append('<p class="alert-message">'+value+'</p>');
          });
        }else if(data.status == "failed"){
          
          jQuery('.alert-danger').show();
          jQuery('.alert-danger').append('<p class="alert-message">'+data.message+'</p>');
        }else{
          $('#new-schedule').modal('hide');

          $('#eventName').val("");
          $('#location').val("");
          $('#detail').val("");
          $('#dateFrom').datepicker(
            "setDate", new Date()
          );
          $('#timeFrom').timepicker(
            "setTime", new Date()
          );
          $('#dateTo').datepicker(
            "setDate", new Date()
          );
          $('#timeTo').timepicker(
            "setTime", new Date()
          );
          $('.alert-message').remove();
          $('#alert-danger').hide();

          $.ajax({
            type : 'GET',
            url : '/calendar/'+currentYear+'/'+currentMonth,
            success : function(data){
              // console.log(data);
              var schedules = $.parseJSON(data);
              populateSchedules(schedules);
            },
            error : function(xhr, textStatus, errorThrown){
              console.log("Error : " + errorThrown);
            } 
          })

          // populateSchedules(schedules);
        }

      },
      error : function(xhr, textStatus, errorThrown){
        console.log("Error : " + (xhr.responseJSON.message));
      }
    });
  })

  var currentMonth = (new Date()).getMonth()+1;
  var currentYear = (new Date()).getFullYear();

  $.ajax({
    type : 'GET',
    url : '/calendar/'+currentYear+'/'+currentMonth,
    success : function(data){
      // console.log(data);
      var schedules = $.parseJSON(data);
      populateSchedules(schedules);
    },
    error : function(xhr, textStatus, errorThrown){
      console.log("Error : " + errorThrown);
    } 
  })

  function populateSchedules(schedules){
    $('#list-schedules').text("");
      for (var i = schedules.length - 1; i >= 0; i--) {

        var schedule = schedules[i];

        $('#calendar').fullCalendar('renderEvent',{
          id             : schedule.id,
          title          : schedule.name,
          start          : schedule.date_from,
          end            : schedule.date_to,
          backgroundColor: '#'+schedule.color,
          borderColor    : '#'+schedules[i].color
        });

        $('#list-schedules').append(
            '<tr id="data'+schedule.id+'">'
                +'<td><a id="'+schedule.id+'">'+schedule.name+'</a></td>'
                +'<td>'+schedule.date_from+'</td>'
                +'<td><button class="btn btn-primary" type="button" id="hps'+schedule.id+'">Hapus</btn></td>'
            +'</tr>'
        );

        $('#'+schedule.id).click({schedule : schedule},function(event){

          $('#new-schedule').modal('show');

          console.log(event.data.schedule.type);
          if (event.data.schedule.type == "task") {

            swal("Warning!!!",
                'Task dapat diedit pada menu assessment',
                'warning');
          }else{
            $('#eventName').val(event.data.schedule.name);
            $('#location').val(event.data.schedule.location);
            $('#detail').val(event.data.schedule.detail);
            $('#dateFrom').datepicker(
              "setDate", new Date(event.data.schedule.date_from)
            );
            $('#timeFrom').timepicker(
              "setTime", new Date(event.data.schedule.date_from)
            );
            $('#dateTo').datepicker(
              "setDate", new Date(event.data.schedule.date_to)
            );
            $('#timeTo').timepicker(
              "setTime", new Date(event.data.schedule.date_to)
            )
          }

          
        })

        $('#hps'+schedule.id).click({schedule : schedule}, function(event){
          // console.log("hapus " + event.data.schedule.id)
          if (event.data.schedule.type == "task") {
            swal("Warning!!!",
                  'Task hanya dapat dihapus pada menu assessment',
                  'warning');
          }else{
            Swal.fire({
              title: 'Apakah anda yakin akan menghapus jadwal?',
              type: 'warning',
              showCancelButton: true,
              confirmButtonColor: '#3085d6',
              cancelButtonColor: '#d33',
              confirmButtonText: 'Yes'
            }).then((result) => {
              if (result.value) {
                $.ajax({
                  type : 'DELETE',
                  url : '/calendar/'+event.data.schedule.id,
                  success : function(data){
                    $('#data'+  event.data.schedule.id).remove();

                    $('#calendar').fullCalendar('removeEvents',event.data.schedule.id);

                    swal("Success!",
                        'Jadwal berhasil dihapus',
                        'success');
                  },
                  error : function(xhr, textStatus, errorThrown){
                    console.log("Error : " + errorThrown);
                  }
                })
              }
            })
             
          }
          
        })

        // $('#list-schedule-footer').text(data.links);
      }
  }

  $('#add-schedule').click(function(event){
    $('#new-schedule').modal('show');

    $('#eventName').val("");
    $('#location').val("");
    $('#detail').val("");
    $('#dateFrom').datepicker(
      "setDate", new Date()
    );
    $('#timeFrom').timepicker(
      "setTime", new Date()
    );
    $('#dateTo').datepicker(
      "setDate", new Date()
    );
    $('#timeTo').timepicker(
      "setTime", new Date()
    );
    $('.alert-message').remove();
    $('#alert-danger').hide();
  });

  /* initialize the external events
   -----------------------------------------------------------------*/
  function init_events(ele) {
    ele.each(function () {

      // create an Event Object (http://arshaw.com/fullcalendar/docs/event_data/Event_Object/)
      // it doesn't need to have a start or end
      var eventObject = {
        title: $.trim($(this).text()) // use the element's text as the event title
      }

      // store the Event Object in the DOM element so we can get to it later
      $(this).data('eventObject', eventObject)

      // make the event draggable using jQuery UI
      $(this).draggable({
        zIndex        : 1070,
        revert        : true, // will cause the event to go back to its
        revertDuration: 0  //  original position after the drag
      })

    })
  }



  init_events($('#external-events div.external-event'))

  /* initialize the calendar
   -----------------------------------------------------------------*/
  //Date for the calendar events (dummy data)
  var date = new Date()
  var d    = date.getDate(),
      m    = date.getMonth(),
      y    = date.getFullYear()
  $('#calendar').fullCalendar({
    customButtons: {
      nextCustomButton: {
        text: '',
        icon: 'right-single-arrow',
        click: function() {
          $('#calendar').fullCalendar('next');
          var date = $('#calendar').fullCalendar('getDate');
          var url = '/calendar/'+(date._d.getYear()+1900)+'/'+(date._d.getMonth()+1);
          
          $.ajax({
            type : 'GET',
            url : url,
            success : function(data){
              var schedules = $.parseJSON(data);
              populateSchedules(schedules);
            },
            error : function(xhr, textStatus, errorThrown){
              console.log("Error : " + errorThrown);
            } 
          })
        }
      },
      prevCustomButton: {
        text: '',
        icon: 'left-single-arrow',
        click: function() {
          $('#calendar').fullCalendar('prev');
          var date = $('#calendar').fullCalendar('getDate');
          var url = '/calendar/'+(date._d.getYear()+1900)+'/'+(date._d.getMonth()+1);
          console.log(url);
          $.ajax({
            type : 'GET',
            url : url,
            success : function(data){
              var schedules = $.parseJSON(data);
              populateSchedules(schedules);
            },
            error : function(xhr, textStatus, errorThrown){
              console.log("Error : " + errorThrown);
            } 
          })
        }
      }
    },
    header    : {
      left  : 'prevCustomButton,nextCustomButton today',
      center: 'title',
      right  : 'prevCustomButton,nextCustomButton today',
    },
    buttonText: {
      today: 'today',
      month: 'month',
      week : 'week',
      day  : 'day'
    },
    //Random default events
    // events    : eventss
    // [
    //   {
    //     title          : 'All Day Event',
    //     start          : new Date(y, m, 1),
    //     backgroundColor: '#f56954', //red
    //     borderColor    : '#f56954' //red
    //   },
    //   {
    //     title          : 'Long Event',
    //     start          : new Date(y, m, d - 5),
    //     end            : new Date(y, m, d - 2),
    //     backgroundColor: '#f39c12', //yellow
    //     borderColor    : '#f39c12' //yellow
    //   },
    //   {
    //     title          : 'Meeting',
    //     start          : new Date(y, m, d, 10, 30),
    //     allDay         : false,
    //     backgroundColor: '#0073b7', //Blue
    //     borderColor    : '#0073b7' //Blue
    //   },
    //   {
    //     title          : 'Lunch',
    //     start          : new Date(y, m, d, 12, 0),
    //     end            : new Date(y, m, d, 14, 0),
    //     allDay         : false,
    //     backgroundColor: '#00c0ef', //Info (aqua)
    //     borderColor    : '#00c0ef' //Info (aqua)
    //   },
    //   {
    //     title          : 'Birthday Party',
    //     start          : new Date(y, m, d + 1, 19, 0),
    //     end            : new Date(y, m, d + 1, 22, 30),
    //     allDay         : false,
    //     backgroundColor: '#00a65a', //Success (green)
    //     borderColor    : '#00a65a' //Success (green)
    //   },
    //   {
    //     title          : 'Click for Google',
    //     start          : new Date(y, m, 28),
    //     end            : new Date(y, m, 29),
    //     url            : 'http://google.com/',
    //     backgroundColor: '#3c8dbc', //Primary (light-blue)
    //     borderColor    : '#3c8dbc' //Primary (light-blue)
    //   }
    // ]
    // ,
    editable  : false,
    droppable : true, // this allows things to be dropped onto the calendar !!!
    drop      : function (date, allDay) { // this function is called when something is dropped

      // retrieve the dropped element's stored Event Object
      var originalEventObject = $(this).data('eventObject')

      // we need to copy it, so that multiple events don't have a reference to the same object
      var copiedEventObject = $.extend({}, originalEventObject)

      // assign it the date that was reported
      copiedEventObject.start           = date
      copiedEventObject.allDay          = allDay
      copiedEventObject.backgroundColor = $(this).css('background-color')
      copiedEventObject.borderColor     = $(this).css('border-color')

      // render the event on the calendar
      // the last `true` argument determines if the event "sticks" (http://arshaw.com/fullcalendar/docs/event_rendering/renderEvent/)
      $('#calendar').fullCalendar('renderEvent', copiedEventObject, true)

      // is the "remove after drop" checkbox checked?
      if ($('#drop-remove').is(':checked')) {
        // if so, remove the element from the "Draggable Events" list
        $(this).remove()
      }

    }
  })

  /* ADDING EVENTS */
  var currColor = '#3c8dbc' //Red by default
  //Color chooser button
  var colorChooser = $('#color-chooser-btn')
  $('#color-chooser > li > a').click(function (e) {
    e.preventDefault()
    //Save color
    currColor = $(this).css('color')
    //Add color effect to button
    $('#add-new-event').css({ 'background-color': currColor, 'border-color': currColor })
  })
  $('#add-new-event').click(function (e) {
    e.preventDefault()
    //Get value and make sure it is not null
    var val = $('#new-event').val()
    if (val.length == 0) {
      return
    }

    //Create events
    var event = $('<div />')
    event.css({
      'background-color': currColor,
      'border-color'    : currColor,
      'color'           : '#fff'
    }).addClass('external-event')
    event.html(val)
    $('#external-events').prepend(event)

    //Add draggable funtionality
    init_events(event)

    //Remove event from text input
    $('#new-event').val('')
  })
})